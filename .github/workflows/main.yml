#GitHub Actions for CI

#The name of your workflow.
name: Test, Build and Release apk

# Trigger the workflow on push or pull request
on: push # on: [push,pull_request]

#A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:
  build:
    name: Build APK
    #The type of machine to run the job on. [windows,macos, ubuntu , self-hosted]
    runs-on: ubuntu-latest
    #sequence of tasks called
    steps:
    # The branch or tag ref that triggered the workflow will be checked out.
    # https://github.com/actions/checkout
    - uses: actions/checkout@v1
    # This action sets up a java environment
    # https://github.com/actions/setup-java
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    # Setup a flutter environment.
    # https://github.com/marketplace/actions/flutter-action
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.7.8+hotfix.4'
    - run: flutter pub get
    # run static analys code
    - run: flutter  analyze
    # run  flutter widgets tests  and unit tests
    - run: flutter test # --coverage
    # Upload coverage reports to Codecov
    # https://github.com/marketplace/actions/codecov
    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:
    #    token: ${{ secrets.CODECOV_TOKEN }} # Replace with the Actual token [Check codecov doc]
    #    file: coverage/lcov.info
    # build Android version
    - run: flutter build apk --debug --split-per-abi
    # This action will create a github release and optionally upload an artifact to it.
    # https://github.com/ncipollo/release-action
    - name: Create a Release APK
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/debug/*.apk"
        token: ${{ secrets.GitHub_Actions }} # GitHub Actions is the secret token name
